angular.module("de.cismet.crisma.widgets.scenarioListWidgetWirecloud",["de.cismet.crisma.widgets.scenarioListWidget","de.cismet.crisma.ICMM.Worldstates","de.cismet.commons.angular.angularTools"]).controller("de.cismet.crisma.widgets.scenarioListWidgetWirecloud.wire",["$scope","de.cismet.crisma.ICMM.Worldstates","de.cismet.commons.angular.angularTools.AngularTools","DEBUG",function(a,b,c,d){"use strict";var e,f;"undefined"==typeof MashupPlatform||(e=MashupPlatform,a.activeWS={},a.$watch("activeWS",function(a,b){a&&b&&a.id&&b.id&&a.id===b.id||a&&a.id&&e.wiring.pushEvent("getActiveWorldstate",a.id.toString())}),f=function(e){var f;if(f=function(b){c.safeApply(a,function(){a.activeWS=b})},e)try{b.get({wsId:e}).$promise.then(function(a){f(a)})}catch(g){d&&console.log(g),f({})}else f({})},e.wiring.registerCallback("setActiveWorldstate",f))}]).config(["$provide",function(a){"use strict";var b;"undefined"==typeof MashupPlatform?console.log("mashup platform not available"):(b=MashupPlatform,a.constant("DEBUG",b.prefs.get("DEBUG")),a.constant("CRISMA_DOMAIN",b.prefs.get("CRISMA_DOMAIN")),a.constant("CRISMA_ICMM_API",b.prefs.get("CRISMA_ICMM_API")))}]);
//# sourceMappingURL=crisma-scenario-list-widget-wirecloud.min.js.map
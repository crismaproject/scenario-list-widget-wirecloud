angular.module("de.cismet.crisma.widgets.scenarioListWidgetWirecloud",["de.cismet.crisma.widgets.scenarioListWidget","de.cismet.crisma.widgets.shared"]).run(["$rootScope","$q","de.cismet.crisma.widgets.shared.SharedService","de.cismet.crisma.widgets.scenarioListWidget.services.ScenarioWorldstatesService","DEBUG",function(a,b,c,d,e){"use strict";var f,g;"undefined"==typeof MashupPlatform||(f=MashupPlatform,a.$on("selectedWorldstatesChanged",function(){var a,b,d,e;if(b=c.getSelectedWorldstates(),d=[],b)for(a=0;a<b.length;++a)d.push(b[a].id);e=JSON.stringify(d),f.wiring.pushEvent("getSelectedWorldstates",e)}),g=function(a){var f,g,h,i;if(h=function(a){c.setSelectedWorldstates(a)},a)try{if(i=JSON.parse(a),$.isArray(i)){for(g=[],f=0;f<i.length;++f)g[f]=d.getScenarioWorldstates().get({wsId:i[f]}).$promise;b.all(g).then(function(a){h(a)})}else h([])}catch(j){e&&console.log(j),h([])}else h([])},f.wiring.registerCallback("setSelectedWorldstates",g))}]).config(["$provide",function(a){"use strict";var b;"undefined"==typeof MashupPlatform?(console.log("mashup platform not available"),a.constant("DEBUG","true"),a.constant("CRISMA_DOMAIN","CRISMA"),a.constant("CRISMA_ICMM_API","http://crisma.cismet.de/icmm_api")):(b=MashupPlatform,a.constant("DEBUG",b.prefs.get("DEBUG")),a.constant("CRISMA_DOMAIN",b.prefs.get("CRISMA_DOMAIN")),a.constant("CRISMA_ICMM_API",b.prefs.get("CRISMA_ICMM_API")))}]);